---
name: build

on:
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          extras: "-E pandas"
      - name: Linting and static code checks
        run: pre-commit run --all-files --show-diff-on-failure

  build_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Build docs
        run: cd docs && make html SPHINXOPTS="-W --keep-going"

  build_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Build package
        run: poetry build

  test_core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Test core
        run: pytest tests/tests_unit -n8 --dist loadscope --maxfail 10 -m 'not dsl' --test-deps-only-core

  test_full:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          python_version: ${{ matrix.python-version }}
          extras: "-E all"

      - name: Test full
        env:
          LOGIN_FLOW: client_credentials
          COGNITE_CLIENT_SECRET: ${{ secrets.IDP_CLIENT_SECRET_CI }}
          COGNITE_TOKEN_URL: https://login.microsoftonline.com/cognitepysdk.onmicrosoft.com/oauth2/v2.0/token
          COGNITE_TOKEN_SCOPES: ${{ vars.CDF_BASE_URL_CI }}/.default
          COGNITE_CLIENT_ID: ${{ vars.IDP_CLIENT_ID_CI }}
          COGNITE_PROJECT: ${{ vars.CDF_PROJECT_CI }}
          COGNITE_BASE_URL: ${{ vars.CDF_BASE_URL_CI }}
          COGNITE_CLIENT_NAME: python-sdk-integration-tests
        # Testpaths are defined in the pytest.ini file:
        run: pytest --durations=10 --cov --cov-report term --cov-report xml:coverage.xml -n8 --dist loadscope --reruns 2 --maxfail 20

      - uses: codecov/codecov-action@v5
        if: matrix.os == 'windows-latest' && matrix.python-version == '3.10'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
