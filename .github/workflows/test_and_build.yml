name: test_and_build

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install required dependencies
      run: |
        python3 -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install

    - name: Check codestyle
      run: |
        pre-commit run --all-files

    - name: Test core
      env:
          LOGIN_FLOW: client_credentials
          COGNITE_CLIENT_SECRET: ${{ secrets.COGNITE_CLIENT_SECRET }}
          COGNITE_TOKEN_URL: https://login.microsoftonline.com/dff7763f-e2f5-4ffd-9b8a-4ba4bafba5ea/oauth2/v2.0/token
          COGNITE_TOKEN_SCOPES: https://greenfield.cognitedata.com/.default
          COGNITE_CLIENT_ID: 14fd282e-f77a-457d-add5-928ec2bcbf04
          COGNITE_PROJECT: python-sdk-test
          COGNITE_BASE_URL: https://greenfield.cognitedata.com
          COGNITE_CLIENT_NAME: python-sdk-integration-tests
          CI: 1
      run: pytest tests/tests_unit --maxfail 10 -m 'not dsl' --test-deps-only-core

    - name: Install optional dependencies
      run: poetry install -E all

    - name: Test all
      env:
        LOGIN_FLOW: client_credentials
        COGNITE_CLIENT_SECRET: ${{ secrets.COGNITE_CLIENT_SECRET }}
        COGNITE_TOKEN_URL: https://login.microsoftonline.com/dff7763f-e2f5-4ffd-9b8a-4ba4bafba5ea/oauth2/v2.0/token
        COGNITE_TOKEN_SCOPES: https://greenfield.cognitedata.com/.default
        COGNITE_CLIENT_ID: 14fd282e-f77a-457d-add5-928ec2bcbf04
        COGNITE_PROJECT: python-sdk-test
        COGNITE_BASE_URL: https://greenfield.cognitedata.com
        COGNITE_CLIENT_NAME: python-sdk-integration-tests
        CI: 1
      run: |
        coverage run --source cognite -m pytest -v tests --reruns 2
        coverage xml

    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

    - name: Build package
      run: poetry build

    - name: Build docs
      run: cd docs && make html
